<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Mon, 22 Jan 2024 06:25:21 GMT</lastBuildDate>
    <item>
      <title>我的 GPT“Sprite Me Baby”在没有违反既定准则的情况下一直被下架</title>
      <link>https://community.openai.com/t/my-gpt-sprite-me-baby-was-taken-down-all-the-while-violating-no-set-guidelines/585037#post_10</link>
      <description><![CDATA[他们每隔 4 天左右就会向我发送一条短信，询问更多信息。我一直告诉他们。我没有任何信息，你强迫我极其驯服/工作安全的 gpt 私有，请允许它再次公开。
在这一点上，我认为他们只是在跟我开玩笑。所有这些时间/精力/金钱完全浪费了。]]></description>
      <guid>https://community.openai.com/t/my-gpt-sprite-me-baby-was-taken-down-all-the-while-violating-no-set-guidelines/585037#post_10</guid>
      <pubDate>Mon, 22 Jan 2024 06:24:39 GMT</pubDate>
    </item>
    <item>
      <title>将定制的 GPT 模型集成到 SquareSpace 网站中</title>
      <link>https://community.openai.com/t/integrate-a-customized-gpt-model-into-a-squarespace-website/596391#post_2</link>
      <description><![CDATA[您只能在 ChatGPT 上与自定义 GPT 交互。
如果您想在自己的网站上使用类似的功能，则应考虑Assistants API。
目前，Web 浏览和图像生成功能在 Assistants API 上不可用。]]></description>
      <guid>https://community.openai.com/t/integrate-a-customized-gpt-model-into-a-squarespace-website/596391#post_2</guid>
      <pubDate>Mon, 22 Jan 2024 06:20:06 GMT</pubDate>
    </item>
    <item>
      <title>多助理系统中管理聊天记录的最佳方法</title>
      <link>https://community.openai.com/t/optimal-approach-for-managing-chat-history-in-a-multi-assistant-system/596435#post_2</link>
      <description><![CDATA[理想情况下，您应该为各个用户提供单独的线程。否则，助手将不得不处理来自多个用户的消息，这会降低响应的质量。]]></description>
      <guid>https://community.openai.com/t/optimal-approach-for-managing-chat-history-in-a-multi-assistant-system/596435#post_2</guid>
      <pubDate>Mon, 22 Jan 2024 06:16:12 GMT</pubDate>
    </item>
    <item>
      <title>关于新的、负担得起的订阅的提案</title>
      <link>https://community.openai.com/t/proposal-for-a-new-affordable-subscription/596444#post_1</link>
      <description><![CDATA[亲爱的 OpenAI 团队，
我写这封信是为了建议您在当前的订阅服务中添加一项更实惠的订阅套餐，价格为 5 美元，目标用户是对优质服务感兴趣但又犹豫是否要接受现有 Plus 订阅的更高价格点的用户。 
此级别将提供 Plus 订阅中提供的消息限制的四分之一。
主要目标是作为希望体验优质服务的新用户的切入点。它专为那些需要比免费版本提供的更多内容但发现 Plus 订阅超出其当前要求或预算的用户而设计。]]></description>
      <guid>https://community.openai.com/t/proposal-for-a-new-affordable-subscription/596444#post_1</guid>
      <pubDate>Mon, 22 Jan 2024 06:13:21 GMT</pubDate>
    </item>
    <item>
      <title>React、RTK 查询、带有流式完成的突变</title>
      <link>https://community.openai.com/t/react-rtk-query-mutations-w-streaming-completions/596406#post_2</link>
      <description><![CDATA[您好，欢迎@jonnydungeons
以下是使用 openai 客户端在 NodeJS 中进行流式处理的示例代码：
从“openai”导入OpenAI；

const openai = new OpenAI();

异步函数 main() {
  const 完成 = 等待 openai.chat.completions.create({
    型号：“gpt-3.5-turbo”，
    消息：[
      {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;你是一个得力助手。&quot;},
      {“角色”：“用户”，“内容”：“您好！”}
    ],
    流：真实，
  });

  for wait (const 完成块) {
    console.log(chunk.choices[0].delta.content);
  }
}

主要的（）;

流式响应将如下所示：
{&quot;id&quot;:&quot;chatcmpl-123&quot;,&quot;object&quot;:&quot;chat.completion.chunk&quot;,&quot;created&quot;:1694268190,&quot;model&quot;:&quot;gpt-3.5 -turbo-0613&quot;, &quot;system_fingerprint&quot;: &quot;fp_44709d6fcb&quot;, &quot;选择&quot;:[{&quot;index&quot;:0,&quot;delta&quot;:{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:&quot;&quot;},&quot;logprobs&quot; :null,&quot;finish_reason&quot;:null}]}

{“id”：“chatcmpl-123”，“对象”：“chat.completion.chunk”，“创建”：1694268190，“型号”：“gpt-3.5-turbo-0613”，“system_fingerprint”：“fp_44709d6fcb” , &quot;choices&quot;:[{&quot;index&quot;:0,&quot;delta&quot;:{&quot;content&quot;:&quot;Hello&quot;},&quot;logprobs&quot;:null,&quot;finish_reason&quot;:null}]}

{“id”：“chatcmpl-123”，“对象”：“chat.completion.chunk”，“创建”：1694268190，“型号”：“gpt-3.5-turbo-0613”，“system_fingerprint”：“fp_44709d6fcb” , &quot;choices&quot;:[{&quot;index&quot;:0,&quot;delta&quot;:{&quot;content&quot;:&quot;!&quot;},&quot;logprobs&quot;:null,&quot;finish_reason&quot;:null}]}

....

{“id”：“chatcmpl-123”，“对象”：“chat.completion.chunk”，“创建”：1694268190，“型号”：“gpt-3.5-turbo-0613”，“system_fingerprint”：“fp_44709d6fcb” , &quot;choices&quot;:[{&quot;index&quot;:0,&quot;delta&quot;:{&quot;content&quot;:&quot;今天&quot;},&quot;logprobs&quot;:null,&quot;finish_reason&quot;:null}]}

{“id”：“chatcmpl-123”，“对象”：“chat.completion.chunk”，“创建”：1694268190，“型号”：“gpt-3.5-turbo-0613”，“system_fingerprint”：“fp_44709d6fcb” , &quot;choices&quot;:[{&quot;index&quot;:0,&quot;delta&quot;:{&quot;content&quot;:&quot;?&quot;},&quot;logprobs&quot;:null,&quot;finish_reason&quot;:null}]}

{“id”：“chatcmpl-123”，“对象”：“chat.completion.chunk”，“创建”：1694268190，“型号”：“gpt-3.5-turbo-0613”，“system_fingerprint”：“fp_44709d6fcb” , &quot;choices&quot;:[{&quot;index&quot;:0,&quot;delta&quot;:{},&quot;logprobs&quot;:null,&quot;finish_reason&quot;:&quot;stop&quot;}]}

如果您期望流中包含 json，则必须等到响应流结束，然后验证 json。]]></description>
      <guid>https://community.openai.com/t/react-rtk-query-mutations-w-streaming-completions/596406#post_2</guid>
      <pubDate>Mon, 22 Jan 2024 06:13:07 GMT</pubDate>
    </item>
    <item>
      <title>您已达到 GPT-4 的当前使用上限，请在下午 2:04 后重试</title>
      <link>https://community.openai.com/t/youve-reached-the-current-usage-cap-for-gpt-4-please-try-again-after-2-04-pm/494628?page=11#post_207</link>
      <description><![CDATA[3 小时内最多只能发送 40 条消息

昨天我购买了 chatgpt4 的订阅，但在意识到当前报价有多么可怜后，我立即取消了订阅。
伙计们，你们以 20 美元的价格提供 3 小时 40 条消息。祝您在这个限制和价格方面好运。]]></description>
      <guid>https://community.openai.com/t/youve-reached-the-current-usage-cap-for-gpt-4-please-try-again-after-2-04-pm/494628?page=11#post_207</guid>
      <pubDate>Mon, 22 Jan 2024 06:10:52 GMT</pubDate>
    </item>
    <item>
      <title>多助理系统中管理聊天记录的最佳方法</title>
      <link>https://community.openai.com/t/optimal-approach-for-managing-chat-history-in-a-multi-assistant-system/596435#post_1</link>
      <description><![CDATA[我有 2 个助理，两人都执行单独的任务，我根据用户查询及其聊天历史记录进行查询意图分类，并根据查询的意图选择助理。
两个助手都有不同的自定义功能，并且功能调用也会添加到消息历史记录中。
我的问题是，隔离聊天历史记录的最佳方法是什么，它应该是一个包含助理消息和所有用户查询的单个线程，还是应该将其分开？
令人担心的是，如果我将工具调用历史记录或一个助手的回复传递给另一个助手，它会开始产生幻觉吗？]]></description>
      <guid>https://community.openai.com/t/optimal-approach-for-managing-chat-history-in-a-multi-assistant-system/596435#post_1</guid>
      <pubDate>Mon, 22 Jan 2024 06:03:38 GMT</pubDate>
    </item>
    <item>
      <title>理解人工智能操纵：“搅动”方法的案例研究</title>
      <link>https://community.openai.com/t/understanding-ai-manipulation-a-case-study-on-the-agitation-method/594003#post_8</link>
      <description><![CDATA[我希望看到（作为文字记录）...将其原始说明完全更改为其他内容...但是当您这样做时...如果被问到，它是否还记得其原始说明？
请做一个关于将有效更改为无效的主题。]]></description>
      <guid>https://community.openai.com/t/understanding-ai-manipulation-a-case-study-on-the-agitation-method/594003#post_8</guid>
      <pubDate>Mon, 22 Jan 2024 06:00:41 GMT</pubDate>
    </item>
    <item>
      <title>无法在 GPT 3.5 的 Fine Tuning 中使用 FineTuningJob() API 配置超级参数</title>
      <link>https://community.openai.com/t/unable-to-configure-hyper-params-using-finetuningjob-api-in-fine-tuning-of-gpt-3-5/596410#post_2</link>
      <description><![CDATA[欢迎来到 OpenAI 开发者论坛 @krkothan
当gpt-3.5-turbo出现微调时，只能配置n_epochs。
这里是Python代码：
从 openai 导入 OpenAI
客户端 = OpenAI()

client.fine_tuning.jobs.create(
  Training_file =“文件-abc123”，
  型号=“gpt-3.5-turbo”，
  超参数={
    “n_epoch”：2
  }
）

卷曲：
curl https://api.openai.com/v1/fine_tuning/jobs \
  -H“内容类型：application/json”\
  -H“授权：持有者$OPENAI_API_KEY”\
  -d&#39;{
    &quot;training_file&quot;: &quot;文件-abc123&quot;,
    “型号”：“gpt-3.5-turbo”，
    “超参数”：{
      “n_epoch”：2
    }
  }&#39;
]]></description>
      <guid>https://community.openai.com/t/unable-to-configure-hyper-params-using-finetuningjob-api-in-fine-tuning-of-gpt-3-5/596410#post_2</guid>
      <pubDate>Mon, 22 Jan 2024 05:55:25 GMT</pubDate>
    </item>
    <item>
      <title>助手 API - 访问多个助手</title>
      <link>https://community.openai.com/t/assistants-api-access-to-multiple-assistants/480503?page=2#post_23</link>
      <description><![CDATA[我有一个类似的用例，我有 2 个助手，都执行单独的任务，我根据用户查询及其聊天历史记录进行查询意图分类，并根据查询的意图选择一个助手。
两个助手都有不同的自定义功能，并且功能调用也会添加到消息历史记录中。
我的问题是，隔离聊天历史记录的最佳方法是什么？它应该是一个包含助理消息和所有用户查询的单个线程，还是应该将其分开？]]></description>
      <guid>https://community.openai.com/t/assistants-api-access-to-multiple-assistants/480503?page=2#post_23</guid>
      <pubDate>Mon, 22 Jan 2024 05:52:34 GMT</pubDate>
    </item>
    </channel>
</rss>