<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Fri, 23 Feb 2024 12:30:53 GMT</lastBuildDate>
    <item>
      <title>非常大的 Neo4j 图 + LLM</title>
      <link>https://community.openai.com/t/very-large-neo4j-graph-llm/649949#post_4</link>
      <description><![CDATA[


 sai.bharadwaj.1:
&lt;块引用&gt;
谁能帮我解决这个问题吗？


您可以使用具有更大上下文的模型，例如gpt-4-turbo。
但我强烈建议您重新评估您的流程。你的图表真的是一个由随机实体和关系组成的厨房水槽吗？正常情况下如何使用？这里的流程是怎样的？
也许您最好使用迭代方法，而不是一次性密码查询。]]></description>
      <guid>https://community.openai.com/t/very-large-neo4j-graph-llm/649949#post_4</guid>
      <pubDate>Fri, 23 Feb 2024 12:29:47 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT用matplotlib画图用什么风格？</title>
      <link>https://community.openai.com/t/what-style-does-chatgpt-use-to-draw-pictures-with-matplotlib/645230#post_3</link>
      <description><![CDATA[
以此制作一件艺术品]]></description>
      <guid>https://community.openai.com/t/what-style-does-chatgpt-use-to-draw-pictures-with-matplotlib/645230#post_3</guid>
      <pubDate>Fri, 23 Feb 2024 12:29:36 GMT</pubDate>
    </item>
    <item>
      <title>查询需要特定的单词</title>
      <link>https://community.openai.com/t/query-requires-specific-words/650284#post_1</link>
      <description><![CDATA[我正在开发一个使用 PDF 文件数据的聊天应用程序。以下是一些要点，希望得到一些指导/帮助：

某些查询仅当查询包含实际答案中存在的特定单词时才会检索到正确的数据。此类情况如何处理？
我使用不同类型的内容（例如：仅 pdf 文件中的文本内容、从 YouTube 视频转录中提取的内容、pdf 中表格的内容等）。如果信息存在于两种不同的内容中，例如文本数据和 YouTube 内容，则检索器会优先搜索 YouTube 内容而不是文本数据。我们如何才能优先考虑搜索而不是文本内容？
]]></description>
      <guid>https://community.openai.com/t/query-requires-specific-words/650284#post_1</guid>
      <pubDate>Fri, 23 Feb 2024 12:26:44 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT API 回答了两次，我不知道为什么:(</title>
      <link>https://community.openai.com/t/chatgpt-api-answers-twice-and-i-don-t-know-why/650279#post_1</link>
      <description><![CDATA[我正在尝试构建一个 Web 应用程序，我可以在其中向我们的 ChatGPT 助手输入问题，该助手提供有关上传文档的信息，并接收来自 ChatGPT 的响应。不知道为什么，API总是响应两次。这个问题仍然存在，并不是因为我对每个问题都使用了一个新线程，而是现在即使我对所有问题使用同一个线程，它也会发生。我选择这种方法是因为我希望 ChatGPT 能够在上下文中回答我的问题。
你知道问题出在哪里吗？
从 django.http 导入 JsonResponse
从 django.shortcuts 导入渲染
导入openai
导入json
导入时间
从 django.views.decorators.csrf 导入 csrf_exempt
从 django.views.decorators.http 导入 require_http_methods
def serialize_thread_messages(messages):
serialized_messages = 
对于消息中的消息：
序列化消息 = {
“id”：消息.id，
“角色”：消息.角色，
“content”: [{“type”: content.type, “text”: content.text.value} for message.content 中的内容]
}
serialized_messages.append(serialized_message)
返回序列化消息
助理 ID
assistant_id = “-”
线程的全局变量
线程=无
@csrf_exempt
@require_http_methods([“POST”])
def get_chatgpt_response(请求):
全局线程
api_key = “-”
客户端 = openai.Client(api_key=api_key)
尝试：
data = json.loads(request.body.decode(&#39;utf-8&#39;))
user_input = data[&#39;user_input&#39;]
print(f&quot;Request: {user_input}&quot;) # 打印请求
 # 检查线程是否已经存在，如果不存在则创建一个新线程
    如果线程为无：
        线程 = client.beta.threads.create()

    # 将用户输入发送给助手
    client.beta.threads.messages.create(
        thread_id=线程.id,
        角色=“用户”，
        内容=用户输入，
    ）

    client.beta.threads.runs.create(
        thread_id=线程.id,
        助理id=助理id，
        工具=[{&quot;类型&quot;:&quot;检索&quot;}]
    ）

    # 最大等待时间（以秒为单位）
    最大等待时间 = 240
    开始时间 = 时间.time()
    print(f&quot;请求：{thread.id}&quot;)

    而真实：
        消息 = client.beta.threads.messages.list(thread_id=thread.id)
        对于 messages.data 中的消息：
            if message.role == &quot;助理&quot;:
                消息内容 = 消息内容
                如果 message_content 和 isinstance(message_content, list) 和 message_content[0].type == &#39;text&#39;:
                    Assistant_message_text = message_content[0].text.value
                    print(f&quot;Response: {assistant_message_text}&quot;) # 打印响应
                    返回JsonResponse（{“assistant_response”：assistant_message_text}）
        # 检查是否达到最大等待时间
        如果 time.time() - start_time &gt;最大等待时间：
            return JsonResponse({&quot;assistant_response&quot;: &quot;未收到助手的响应。&quot;})
        # 稍等片刻再重试
        时间.睡眠(2)

除了异常 e：
    返回 JsonResponse({&quot;error&quot;: str(e)})

def home（请求）：
返回渲染（请求，&#39;-&#39;）
输出示例：
]]></description>
      <guid>https://community.openai.com/t/chatgpt-api-answers-twice-and-i-don-t-know-why/650279#post_1</guid>
      <pubDate>Fri, 23 Feb 2024 12:23:02 GMT</pubDate>
    </item>
    </channel>
</rss>