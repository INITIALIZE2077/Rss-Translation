<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Sun, 17 Mar 2024 03:18:45 GMT</lastBuildDate>
    <item>
      <title>使用递归函数/工具调用进行流式传输</title>
      <link>https://community.openai.com/t/streaming-with-recursive-function-tools-calling/687313#post_1</link>
      <description><![CDATA[你好，
函数调用与流不兼容吗？我有一个没有流媒体的例子，效果很好。当我设置stream:true时，我没有得到函数调用的工作。我正在尝试构建一个驾车通过应用程序，并根据订单单个项目或多个项目进行递归调用。有人可以帮助我如何使用流式传输进行递归调用吗？
从“openai”导入OpenAI；
从“ai”导入{ OpenAIStream，StreamingTextResponse }；
从“./functions”导入{函数}；
从 &#39;openai/resources/chat&#39; 导入类型 { ChatCompletionCreateParams }；



// 可选，但推荐：在边缘运行时运行。
// 请参阅 https://vercel.com/docs/concepts/functions/edge-functions
导出常量运行时=“边缘”；

const openai = 新 OpenAI({
  apiKey: process.env.OPENAI_API_KEY!,
});



// 工具定义示例
常量工具= {
  &#39;订单单项&#39;: (args) =&gt; {
    // 处理单个商品订单的逻辑
    console.log(&#39;订购单个商品：&#39;, args);
    // 在这里实现排序逻辑
  },
  &#39;订单菜单项&#39;: (args) =&gt; {
    // 处理菜单项顺序的逻辑
    console.log(&#39;订购菜单项：&#39;, args);
    // 在这里实现排序逻辑
  },
  &#39;订购饮料项目&#39;: (args) =&gt; {
    // 处理饮品订单的逻辑
    console.log(&#39;订购饮料项目：&#39;, args);
    // 在这里实现排序逻辑
  },
};

导出异步函数 POST(req: Request) {
  // 从请求正文中提取“messages”
  const { messages } = wait req.json();
  const start = Date.now();
  
  // 根据提示请求OpenAI API响应
  尝试 {
    const 响应 = 等待 openai.chat.completions.create({
      型号：“gpt-4”，
      流：真实，
      消息：消息，
      //工具：工具，
      //工具选择：“自动”，
    });
    //console.log(&quot;消息====&gt;&quot;, messages);
    //console.log(&quot;响应===&gt;&quot;, 响应);

    const 流 = OpenAIStream(响应);
    让工具调用 = {
      名称：空，
      参数：“”，
    };

    

    // 基于累积数据的工具调用的示例伪逻辑
    if (toolInitation.name &amp;&amp; typeof 工具[toolInitation.name] === &quot;函数&quot;) {
      尝试 {
        // 假设 toolInitation.arguments 是字符串化的 JSON，解析它
        // 如果不是JSON格式，则相应调整这部分
        const args = JSON.parse(toolInitation.arguments);
        工具[工具调用.名称](args); // 使用解析后的参数调用该工具
      } 捕获（错误）{
        console.error(&quot;调用工具或解析参数时出错：&quot;, error);
        // 适当地处理错误
      }
    }
    
    const 响应流 = 新 StreamingTextResponse(流, {
      标题：{
        &quot;X-LLM-Start&quot;: `${start}`,
        &quot;X-LLM-Response&quot;: `${Date.now()}`,
      },
    });
    //console.log(&quot;resstream ===&gt;&quot;,responsestream);

    返回响应流；
   
  } 捕获（错误）{
    console.error(&quot;错误：&quot;, 错误);
    返回新的响应（JSON.stringify（{错误：error.message}），{
      状态：500，
      headers: { &#39;Content-Type&#39;: &#39;application/json&#39; },
    });
  }
}



]]></description>
      <guid>https://community.openai.com/t/streaming-with-recursive-function-tools-calling/687313#post_1</guid>
      <pubDate>Sun, 17 Mar 2024 02:55:23 GMT</pubDate>
    </item>
    <item>
      <title>Assistants API Streaming 在工具输出提交时结束流</title>
      <link>https://community.openai.com/t/assistants-api-streaming-ends-stream-on-tool-output-submission/684621#post_4</link>
      <description><![CDATA[我刚刚尝试了类似的操作，虽然前几个运行步骤似乎注册了更新的工具输出，但运行只是返回到需要完全相同的工具输出并再次奇怪地终止。]]></description>
      <guid>https://community.openai.com/t/assistants-api-streaming-ends-stream-on-tool-output-submission/684621#post_4</guid>
      <pubDate>Sun, 17 Mar 2024 02:26:54 GMT</pubDate>
    </item>
    <item>
      <title>使用 Make.com 的 API 调用失败。状态失败</title>
      <link>https://community.openai.com/t/failed-api-call-using-make-com-status-failed/590917#post_4</link>
      <description><![CDATA[工作了一整天，然后突然“无效状态“失败”了几个小时。]]></description>
      <guid>https://community.openai.com/t/failed-api-call-using-make-com-status-failed/590917#post_4</guid>
      <pubDate>Sun, 17 Mar 2024 02:25:05 GMT</pubDate>
    </item>
    <item>
      <title>支付 5 美元后等级限额未增加</title>
      <link>https://community.openai.com/t/tier-limit-not-increased-after-paying-5/687137#post_12</link>
      <description><![CDATA[如果等待一天并不能解决问题（而且经常如此），那么您需要通过更多某种类型的投入来刺激变革。
您已经完成了帮助请求。
特殊之处可能是一个帐户太旧但未用于付款，尚未升级并根据使用情况放置到更高的级别。]]></description>
      <guid>https://community.openai.com/t/tier-limit-not-increased-after-paying-5/687137#post_12</guid>
      <pubDate>Sun, 17 Mar 2024 02:23:34 GMT</pubDate>
    </item>
    <item>
      <title>助理以不同的输入语言进行响应</title>
      <link>https://community.openai.com/t/assistant-respond-in-a-different-input-language/687251#post_2</link>
      <description><![CDATA[最好的做法是不要使用 gpt-4-turbo 模型。
模型非常不确定要写什么（高度困惑），它甚至无法预测正确语言的标记集。
助手中没有采样参数来限制不良标记，避免引导语言的生成偏离路线，这使得情况变得更糟。
如果您希望降低成本并减少对 AI 大脑造成的损害（只是与检索不兼容），gpt-3.5-turbo-0613 会更好。]]></description>
      <guid>https://community.openai.com/t/assistant-respond-in-a-different-input-language/687251#post_2</guid>
      <pubDate>Sun, 17 Mar 2024 02:19:25 GMT</pubDate>
    </item>
    <item>
      <title>由操作/GPT 提供的 URL 在桌面中不可单击，但在 iOS 应用程序中可单击</title>
      <link>https://community.openai.com/t/urls-served-by-action-gpt-not-clickable-in-desktop-but-are-clickable-in-ios-app/574476#post_10</link>
      <description><![CDATA[自定义 GPT 显示的 URL 仍然不可点击。
我的 GPT 显示从 Excel 数据文件获取的 URL。
URL 格式良好，但显示时不可点击。
示例： https://chat.openai.com/share /e/3c72aa4e-96ff-4e26-b0f8-413bf26bed6d]]></description>
      <guid>https://community.openai.com/t/urls-served-by-action-gpt-not-clickable-in-desktop-but-are-clickable-in-ios-app/574476#post_10</guid>
      <pubDate>Sun, 17 Mar 2024 02:16:06 GMT</pubDate>
    </item>
    <item>
      <title>DALLE3 提示提示和技巧主题</title>
      <link>https://community.openai.com/t/dalle3-prompt-tips-and-tricks-thread/498040?page=2#post_33</link>
      <description><![CDATA[最后，这是单个冰块、日本环境、帆船的重新混合。
]]></description>
      <guid>https://community.openai.com/t/dalle3-prompt-tips-and-tricks-thread/498040?page=2#post_33</guid>
      <pubDate>Sun, 17 Mar 2024 02:12:32 GMT</pubDate>
    </item>
    </channel>
</rss>