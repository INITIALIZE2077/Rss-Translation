<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Sun, 07 Jan 2024 21:16:22 GMT</lastBuildDate>
    <item>
      <title>在 openai api 中发送数百个数据的最佳选择是什么？</title>
      <link>https://community.openai.com/t/which-is-the-best-option-to-send-hundreds-of-data-in-openai-api/578660#post_2</link>
      <description><![CDATA[嗨@BrokenSoul
如果我理解正确的话，您希望人工智能使用您的数据来增强模型对问题的响应。
在这种情况下，我建议使用Assistants API。
因为它会为您完成整个 RAG，并且需要最少的设置，以防您不熟悉自己为 RAG 使用嵌入。]]></description>
      <guid>https://community.openai.com/t/which-is-the-best-option-to-send-hundreds-of-data-in-openai-api/578660#post_2</guid>
      <pubDate>Sun, 07 Jan 2024 21:15:35 GMT</pubDate>
    </item>
    <item>
      <title>嵌入过去的对话数据以进行上下文记忆和检索</title>
      <link>https://community.openai.com/t/embedding-past-conversation-data-for-context-memory-retrieval/578657#post_5</link>
      <description><![CDATA[元数据包含用户和机器人回答和响应的时间戳以及日期，仅此而已。]]></description>
      <guid>https://community.openai.com/t/embedding-past-conversation-data-for-context-memory-retrieval/578657#post_5</guid>
      <pubDate>Sun, 07 Jan 2024 21:14:49 GMT</pubDate>
    </item>
    <item>
      <title>开发LLM应用程序的最大困难</title>
      <link>https://community.openai.com/t/biggest-difficulty-in-developing-llm-apps/571180?page=4#post_78</link>
      <description><![CDATA[如果您要使用此方法，我建议的一件事是根据您的需求使用分箱时间。
作为一个人为的示例，假设您有 84,600 个文档，所有文档的时间戳间隔为一秒。如果最相关的文档是一天前的“最旧”文档，则可能仍符合“新鲜度”的最低阈值。到目前为止，没有理由降低其排名。
您可以在时域中为一天、一周、一个月或任意时间段内的任何内容分配 1 的排名。
此外，在分配基于时间的排名时，您可以使用任何您想要的任意评分系统，具体取决于您想要对“陈旧”文档进行多少惩罚。
一周内的所有内容都可以得到 1 分，一个月以内的所有内容都可以得到 10 分，超过一个月的任何内容都可以得到 100 分。
就像我说的，这完全是任意的。
́\⁠_⁠(⁠ツ⁠)⁠_⁠/⁠́
只有您和您的数据知道应该如何惩罚旧文档。]]></description>
      <guid>https://community.openai.com/t/biggest-difficulty-in-developing-llm-apps/571180?page=4#post_78</guid>
      <pubDate>Sun, 07 Jan 2024 21:14:36 GMT</pubDate>
    </item>
    <item>
      <title>处理相同输入的不一致结果</title>
      <link>https://community.openai.com/t/coping-with-inconsistent-results-on-identical-inputs/576342#post_19</link>
      <description><![CDATA[


让·米歇尔·兰伯特：
&lt;块引用&gt;
但是这篇文章的范围是与相同的输入保持一致（我只是缩小了文章标题的范围）。尽管设置了种子，我仍然看到 API 调用后的不同输出。


您可以使用当前可用的最佳设置来获得最相似的生成：
&quot;seed&quot;: (相同的数字),
“温度”：0.00000000000001，
“顶部_p”：0.000000001，

当存在具有非常相似值的概率时，结果仍然有可能偏离顶部令牌翻转。模型内部在计算中仍然存在抖动。
增强功能是让 AI 接收到的信息变得非常清晰和有指导性，以便 AI 在每个令牌位置生成的顶部令牌很容易区分，因为要提供的答案是可以理解的。
另一种选择是让它变得极其混乱，所以人工智能唯一能说的就是经过预先训练的“我很抱歉，但我无法理解你的信息。请提供明确而具体的请求或提示，我很乐意为您提供帮助。” - 同样具有很高的确定性。]]></description>
      <guid>https://community.openai.com/t/coping-with-inconsistent-results-on-identical-inputs/576342#post_19</guid>
      <pubDate>Sun, 07 Jan 2024 21:03:25 GMT</pubDate>
    </item>
    <item>
      <title>嵌入过去的对话数据以进行上下文记忆和检索</title>
      <link>https://community.openai.com/t/embedding-past-conversation-data-for-context-memory-retrieval/578657#post_4</link>
      <description><![CDATA[np 
它可能开箱即用，但这可能取决于您的音量以及您想要如何检索它。 HyDE 目前是一种流行的方法。&lt; /p&gt;
元数据对内容的语义理解有什么贡献吗？]]></description>
      <guid>https://community.openai.com/t/embedding-past-conversation-data-for-context-memory-retrieval/578657#post_4</guid>
      <pubDate>Sun, 07 Jan 2024 21:01:31 GMT</pubDate>
    </item>
    <item>
      <title>在 openai api 中发送数百个数据的最佳选择是什么？</title>
      <link>https://community.openai.com/t/which-is-the-best-option-to-send-hundreds-of-data-in-openai-api/578660#post_1</link>
      <description><![CDATA[我有一个包含数百个数据的 .csv 文件，我知道最好的选择是制作块并发送到 chatgpt，但我需要它的所有上下文来询问匹配的信息。
我该怎么做？我需要对每个块进行 API 调用？
谢谢。]]></description>
      <guid>https://community.openai.com/t/which-is-the-best-option-to-send-hundreds-of-data-in-openai-api/578660#post_1</guid>
      <pubDate>Sun, 07 Jan 2024 20:47:28 GMT</pubDate>
    </item>
    <item>
      <title>嵌入过去的对话数据以进行上下文记忆和检索</title>
      <link>https://community.openai.com/t/embedding-past-conversation-data-for-context-memory-retrieval/578657#post_3</link>
      <description><![CDATA[我有一个对话历史记录数据集，其中也包含元数据，ada 可以处理吗？或者我必须清理它。
顺便说一句，感谢您的快速回复！]]></description>
      <guid>https://community.openai.com/t/embedding-past-conversation-data-for-context-memory-retrieval/578657#post_3</guid>
      <pubDate>Sun, 07 Jan 2024 20:46:26 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT 的全国收费电话号码可提高可访问性并产生收入</title>
      <link>https://community.openai.com/t/national-fee-based-phone-numbers-for-chatgpt-to-improve-accessibility-and-generate-revenue/578570#post_10</link>
      <description><![CDATA[应用示例：
我已经支付了 ChatGPT-4 的费用。我几乎整整一年都在电脑和智能手机上频繁使用它。然而，有时我希望 ChatGPT 在我无法输入提示时回答问题，例如，当我开车时。
ChatGPT的回答：
*“您可以利用大多数智能手机和 PC 上提供的语音转文本功能。此函数将口语单词转换为文本，然后 ChatGPT 可以处理该文本。在您的设备上激活此功能，只需说出您的问题或命令即可。转录的文本将被输入到 ChatGPT 中。当您无法打字时（例如开车时），此方法特别有用。然而，重要的是要优先考虑安全并遵守有关驾驶时使用移动设备的当地法律。”*
说真的，我应该在开车时阅读智能手机的响应吗？在这里，在我居住的地方，这绝对是非法的。]]></description>
      <guid>https://community.openai.com/t/national-fee-based-phone-numbers-for-chatgpt-to-improve-accessibility-and-generate-revenue/578570#post_10</guid>
      <pubDate>Sun, 07 Jan 2024 20:43:35 GMT</pubDate>
    </item>
    <item>
      <title>文件摘要最佳方式</title>
      <link>https://community.openai.com/t/file-summary-most-optimal-way/578648#post_3</link>
      <description><![CDATA[随着输入大小大幅增加，GPT-4 的响应质量明显下降。为了获得高质量的摘要，建议创建各种主题和子主题的部分摘要，逐步提炼信息。]]></description>
      <guid>https://community.openai.com/t/file-summary-most-optimal-way/578648#post_3</guid>
      <pubDate>Sun, 07 Jan 2024 20:42:36 GMT</pubDate>
    </item>
    <item>
      <title>请考虑添加这些功能：搜索和分组</title>
      <link>https://community.openai.com/t/please-consider-adding-these-features-search-and-grouping/578427#post_4</link>
      <description><![CDATA[并不是试图改变您的想法，只是为了清楚 Superpower ChatGPT 的工作原理：
使用 Superpower ChatGPT，您的所有聊天数据都保存在您的计算机本地。您可以通过查看浏览器中的网络请求来确认这一点。 （需要一些网络开发知识）]]></description>
      <guid>https://community.openai.com/t/please-consider-adding-these-features-search-and-grouping/578427#post_4</guid>
      <pubDate>Sun, 07 Jan 2024 20:42:10 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT 的全国收费电话号码可提高可访问性并产生收入</title>
      <link>https://community.openai.com/t/national-fee-based-phone-numbers-for-chatgpt-to-improve-accessibility-and-generate-revenue/578570#post_9</link>
      <description><![CDATA[


无垃圾邮件：
&lt;块引用&gt;
目前，无法通过电话访问 ChatGPT。这限制了没有智能手机的用户。


好吧，我想我很困惑。在您原来的帖子中，您表示您希望没有智能手机的用户能够访问 ChatGPT。这是令人钦佩的。
但 3GPP 是有关移动电话的标准（参考）。所以是的，我在这里很困惑。
所以，是的，有一定比例的人使用“哑手机”或非“智能手机”的手机，主要是为了限制屏幕时间和其他干扰。这是您的目标人群吗？
所以基本上人们“没有智能手机”？还有那些想要限制科技和干扰他们生活的人……我明白，但这些人很难通过人工智能接触到，而且他们肯定不会付钱。
如果是这样，那么有多少人准备好在没有智能手机的情况下尝试人工智能？我认为这只是人口的一小部分。他们甚至会为这项服务付费吗？您可以在智能手机或设备上免费获取 ChatGPT。他们为什么要付钱？
所以我看到的只是没有动力、不付费的小观众。想法？
但回到纯语音人工智能。一旦我们明白了这一点，游戏规则就会改变！然而，延迟是目前的一大障碍，但通过特殊的低延迟模型和“中性暂停”人工智能，我认为我们可以实现这一目标。]]></description>
      <guid>https://community.openai.com/t/national-fee-based-phone-numbers-for-chatgpt-to-improve-accessibility-and-generate-revenue/578570#post_9</guid>
      <pubDate>Sun, 07 Jan 2024 20:31:06 GMT</pubDate>
    </item>
    <item>
      <title>嵌入过去的对话数据以进行上下文记忆和检索</title>
      <link>https://community.openai.com/t/embedding-past-conversation-data-for-context-memory-retrieval/578657#post_2</link>
      <description><![CDATA[我从本演示文稿中删除了此内容： https://d223302.github.io/AACL2022-Pretrain-Language-Model-Tutorial/lecture_material/AACL_2022_tutorial_PLMs.pdf

嵌入模型试图做的是直接利用LLM的内部语义编码。
这个想法是相似的概念可能有相似的向量。业界已经确定了余弦相似度（这只是归一化的点积），你可以做点积，你可以做欧几里德距离，理论上你甚至可以只做替换编辑距离或其他如果你真的愿意的话。
重点是，模型可以理解你输入的任何语法结构背后的语义。例如，对于多模态嵌入，您发送的内容是文本描述、图像还是两者都无关紧要。如果它们描述或描绘相同的事物，它们的嵌入向量应该非常接近。
因此，如何处理嵌入取决于您。它们非常强大，尤其是对于非结构化文本。
RAG（大多数问答）只是一种流行且易于理解的嵌入用法。
TL；博士：

不用担心微调，只需使用 ada
考虑嵌入摘要或概要，但这取决于您到底想要实现什么目标以及如何检索它们（如果检索文本与格式上存储的文本相似，则有帮助）
只需使用余弦相似度即可。

 PS：Rip达芬奇。为什么。]]></description>
      <guid>https://community.openai.com/t/embedding-past-conversation-data-for-context-memory-retrieval/578657#post_2</guid>
      <pubDate>Sun, 07 Jan 2024 20:20:26 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT 的全国收费电话号码可提高可访问性并产生收入</title>
      <link>https://community.openai.com/t/national-fee-based-phone-numbers-for-chatgpt-to-improve-accessibility-and-generate-revenue/578570#post_8</link>
      <description><![CDATA[我很遗憾使用了 POTS 这个术语，因为它完全被误解了。
我只是指标准电话（无论使用何种媒介），它遵循 ITU-T E.164 的编号计划（请参阅E.164 : 国际公共电信编号方案和https:/ /www.itu.int/dms_pub/itu-t/opb/sp/T-SP-E.164D-2016-PDF-E.pdf）。
在 GSM 标准中，此服务称为 TS 11（请参阅 ETSI 标准 3GPP TS 22.004 的摘录），而不是 BS 20。
]]></description>
      <guid>https://community.openai.com/t/national-fee-based-phone-numbers-for-chatgpt-to-improve-accessibility-and-generate-revenue/578570#post_8</guid>
      <pubDate>Sun, 07 Jan 2024 20:08:03 GMT</pubDate>
    </item>
    <item>
      <title>嵌入过去的对话数据以进行上下文记忆和检索</title>
      <link>https://community.openai.com/t/embedding-past-conversation-data-for-context-memory-retrieval/578657#post_1</link>
      <description><![CDATA[大家好，
我试图弄清楚如何获取过去的对话数据，并根据该数据微调我自己的嵌入模型，使用现有的嵌入模型（例如 openai ada 或其他东西）或训练我自己的嵌入模型将数据嵌入到一个矢量数据库，可以通过语义搜索进行查询，以检索系统提示的上下文片段。
据我所知，大多数嵌入模型都是为问答等查询而设计的。一个答案，但我不确定如何获取非结构化的过去对话数据并有效地嵌入它？我会嵌入整个对话吗？只是问题和答案吗？段落？真的不确定最好的方法是什么......
我环顾四周，似乎无法找到针对这个特定用例的许多经过微调的嵌入模型。我也很矛盾哪种语义搜索最适合这个用例 - 点积还是余弦相似度？或者两者都可能？
好奇地看看别人的想法！
谢谢]]></description>
      <guid>https://community.openai.com/t/embedding-past-conversation-data-for-context-memory-retrieval/578657#post_1</guid>
      <pubDate>Sun, 07 Jan 2024 19:50:56 GMT</pubDate>
    </item>
    <item>
      <title>处理相同输入的不一致结果</title>
      <link>https://community.openai.com/t/coping-with-inconsistent-results-on-identical-inputs/576342#post_18</link>
      <description><![CDATA[一个想法：
您可以考虑为模型提供以前的类别（可能还有增量），并询问它是否应该在类别中添加或删除内容。
我个人在从列表中删除内容方面并没有取得惊人的结果，但我认为我上次尝试类似的事情是在五月份。
在两次传递中删除工作可能会更可靠（要求模型生成，将其与旧类别一起呈现，然后要求它进行比较），但我还没有尝试过。
如果您想协调跨文档的类别，您可能需要尝试类似的方法：生成、呈现来自 Word Net 或其他内容的首选结果，然后进行比较/确认。
无论如何，您都必须反复处理提示才能获得良好的结果。]]></description>
      <guid>https://community.openai.com/t/coping-with-inconsistent-results-on-identical-inputs/576342#post_18</guid>
      <pubDate>Sun, 07 Jan 2024 19:42:05 GMT</pubDate>
    </item>
    </channel>
</rss>