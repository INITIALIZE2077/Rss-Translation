<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Sat, 16 Mar 2024 06:21:20 GMT</lastBuildDate>
    <item>
      <title>如果我付款，想知道 1 级的到期日期</title>
      <link>https://community.openai.com/t/want-to-know-about-the-expiration-date-of-tier-1-if-i-pay/686438#post_2</link>
      <description><![CDATA[等级不会过期，积分也会
我还无法权威确认这一点，但据称购买的资金已过期一年后。]]></description>
      <guid>https://community.openai.com/t/want-to-know-about-the-expiration-date-of-tier-1-if-i-pay/686438#post_2</guid>
      <pubDate>Sat, 16 Mar 2024 06:18:06 GMT</pubDate>
    </item>
    <item>
      <title>如果我付款，想知道 1 级的到期日期</title>
      <link>https://community.openai.com/t/want-to-know-about-the-expiration-date-of-tier-1-if-i-pay/686438#post_1</link>
      <description><![CDATA[您好，如果我支付第 1 级费用，您的文件显示第 1 级金额为 5 美元并有一些限制，那么第 1 级的到期时间是多少？您的免费套餐有效期为 3 个月]]></description>
      <guid>https://community.openai.com/t/want-to-know-about-the-expiration-date-of-tier-1-if-i-pay/686438#post_1</guid>
      <pubDate>Sat, 16 Mar 2024 06:09:08 GMT</pubDate>
    </item>
    <item>
      <title>Azure GPT-4-Turbo JSON 模式响应生成在 1024 个令牌后中断</title>
      <link>https://community.openai.com/t/azure-gpt-4-turbo-json-mode-response-generation-breaks-after-1024-tokens/615574#post_5</link>
      <description><![CDATA[我也遇到这个问题了。有什么解决办法吗？]]></description>
      <guid>https://community.openai.com/t/azure-gpt-4-turbo-json-mode-response-generation-breaks-after-1024-tokens/615574#post_5</guid>
      <pubDate>Sat, 16 Mar 2024 05:57:59 GMT</pubDate>
    </item>
    <item>
      <title>增加知识文件数量会影响性能吗？</title>
      <link>https://community.openai.com/t/does-increasing-the-number-of-knowledge-files-affect-performance/686418#post_1</link>
      <description><![CDATA[增加知识文件的数量是否会影响提示时搜索文档的深度？假设我提出一个问题，GPT 会去查找知识文件。仅拥有知识文件是否会比拥有（例如）10 个文件（其中只有一个相关）进行更深入的分析？或者 ChatGPT 是否足够聪明，可以首先识别正确的文件，然后对其进行分析？
另一点是：从 ChatGPT 在得出答案时能够从不同文件中提取位的意义上来说，拥有多个文件是否会提高性能？]]></description>
      <guid>https://community.openai.com/t/does-increasing-the-number-of-knowledge-files-affect-performance/686418#post_1</guid>
      <pubDate>Sat, 16 Mar 2024 05:53:33 GMT</pubDate>
    </item>
    <item>
      <title>Assistant API系统文件不应暴露给用户+ PDF文件解析间歇性出现错误</title>
      <link>https://community.openai.com/t/assistant-api-system-files-should-not-be-exposed-to-the-user-pdf-file-parsing-is-intermittently-buggy/686100#post_4</link>
      <description><![CDATA[（帖子已被作者删除）]]></description>
      <guid>https://community.openai.com/t/assistant-api-system-files-should-not-be-exposed-to-the-user-pdf-file-parsing-is-intermittently-buggy/686100#post_4</guid>
      <pubDate>Sat, 16 Mar 2024 05:47:38 GMT</pubDate>
    </item>
    <item>
      <title>在助手流中提交工具输出时出现问题</title>
      <link>https://community.openai.com/t/issue-with-submitting-tool-outputs-in-assistants-stream/686414#post_1</link>
      <description><![CDATA[我收到以下错误：
错误：400 1 请求验证错误
身体-&gt;工具输出
  不允许额外字段（type=value_error.extra）

在流中提交工具输出时。据我所知，我的代码与 api 文档相同：
 const { content, AssistantId, fnRegistry } = req
        常量 { 客户端 } = 这个

        const threadId = req.threadId ?? （等待 client.beta.threads.create()）.id

        const lastRuns = 等待 client.beta.threads.runs.list(threadId, { limit: 1 })
        const lastRun = lastRuns.data[0]
        if (lastRun &amp;&amp; !FINISHED_STATUSES.includes(lastRun.status)) {
            throw new Error(&quot;该线程已经有一个活动的运行，请稍候&quot;)
        }

        等待 client.beta.threads.messages.create(threadId, {
            角色：“用户”，
            内容
        })

        常量结果文本流 = []
        常量参数 = {}
        返回新的 Promise(resolve =&gt; {
            让 runId = &quot;&quot;
            client.beta.threads.runs
                .createAndStream(threadId, {
                    Assistant_id：助理ID
                })

                .on(&quot;运行&quot;, 运行 =&gt; {
                    运行 ID = 运行 ID
                })
                .on(&quot;runStepDone&quot;, () =&gt; 解析({ threadId }))
                .on(&quot;textCreated&quot;, text =&gt; console.log(`\nassistant &gt; ${text.value}\n\n`))
                .on(&quot;textDelta&quot;, textDelta =&gt; {
                    resultTextStream.push(textDelta.value)
                    console.log(resultTextStream.join(&quot;&quot;))
                })
                .on(&quot;toolCallCreated&quot;, toolCall =&gt; console.log(`\nassistant &gt; ${toolCall.type}\n\n`))
                .on(&quot;toolCallDone&quot;, async (toolCall: FunctionToolCall) =&gt; {
                    const argP = JSON.parse(args[toolCall.id].join(&quot;&quot;))
                    const { 结果 } = 等待 callFn(toolCall.function.name, argP, fnRegistry)
                    控制台.log(结果)
                    const 流 = 等待 client.beta.threads.runs.submitToolOutputs(threadId, runId, {
                        工具输出：[
                            {
                                tool_call_id：toolCall.id，
                                输出：“完成”
                            }
                        ]
                    })

                    for等待（流的常量事件）{
                        控制台.日志（事件）
                    }
                })

                .on(&quot;toolCallDelta&quot;, (toolCallDelta, 快照) =&gt; {
                    if (toolCallDelta.type === &quot;函数&quot;) {
                        args[snapshot.id] = [...(args[snapshot.id] ?? []), toolCallDelta.function.arguments]
                    }
                    if (toolCallDelta.type === &quot;code_interpreter&quot;) {
                        if (toolCallDelta.code_interpreter.input) {
                            console.log(toolCallDelta.code_interpreter.input)
                        }
                        if (toolCallDelta.code_interpreter.outputs) {
                            console.log(&quot;\n输出 &gt;\n&quot;)
                            toolCallDelta.code_interpreter.outputs.forEach(输出 =&gt; {
                                if (output.type === &quot;日志&quot;) {
                                    console.log(`\n${output.logs}\n`)
                                }
                            })
                        }
                    }
                })
        })
    }

知道这意味着什么吗？]]></description>
      <guid>https://community.openai.com/t/issue-with-submitting-tool-outputs-in-assistants-stream/686414#post_1</guid>
      <pubDate>Sat, 16 Mar 2024 05:46:46 GMT</pubDate>
    </item>
    <item>
      <title>Assistant API系统文件不应暴露给用户+ PDF文件解析间歇性出现错误</title>
      <link>https://community.openai.com/t/assistant-api-system-files-should-not-be-exposed-to-the-user-pdf-file-parsing-is-intermittently-buggy/686100#post_3</link>
      <description><![CDATA[辅助API。抱歉，帖子正文应为“您希望通过培训支持助理的地方”]]></description>
      <guid>https://community.openai.com/t/assistant-api-system-files-should-not-be-exposed-to-the-user-pdf-file-parsing-is-intermittently-buggy/686100#post_3</guid>
      <pubDate>Sat, 16 Mar 2024 05:45:10 GMT</pubDate>
    </item>
    </channel>
</rss>