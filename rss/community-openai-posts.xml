<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Mon, 25 Mar 2024 21:17:28 GMT</lastBuildDate>
    <item>
      <title>聊天限制太低！ GPT4 每 3 小时 40 条消息？</title>
      <link>https://community.openai.com/t/chat-limits-too-low-40-message-per-3hours-on-gpt4/583037?page=4#post_67</link>
      <description><![CDATA[这应该是非法的。购买时，我没有看到任何地方提到限制。取消了我的续订。]]></description>
      <guid>https://community.openai.com/t/chat-limits-too-low-40-message-per-3hours-on-gpt4/583037?page=4#post_67</guid>
      <pubDate>Mon, 25 Mar 2024 21:15:22 GMT</pubDate>
    </item>
    <item>
      <title>如何将对话历史记录传回 API</title>
      <link>https://community.openai.com/t/how-to-pass-conversation-history-back-to-the-api/697083#post_4</link>
      <description><![CDATA[人工智能将始终查阅对话历史记录以获取内容。您不需要告诉它任何有关其对话能力的信息或让它重写内容。
&lt;块引用&gt;
{“role”: “system”, “content”: “你是ExploreAI，户外运动的专家助手。”},
{“role”: “user”, “content”: “世界上最高的山是哪座？”},
{“role”: “assistant”, “content”: “世界上最高的山峰是珠穆朗玛峰，海拔约 29,029 英尺。”},
{“role”: “user”, “content”: “它的高度与第二高相比如何？”},
{“role”: “assistant”, “content”: “珠穆朗玛峰比第二高山 K2 高约 778 英尺，后者海拔约 28,251 英尺。”},
{“role”: “user”, “content”: “它们都是同一个山脉的一部分吗？”},
{“role”: “assistant”, “content”: “是的，珠穆朗玛峰和乔戈里峰都是喜马拉雅山脉的一部分，该山脉横跨亚洲五个国家。”},
{“role”: “user”, “content”: “他们位于哪些国家？”},
{“role”: “assistant”, “content”: “珠穆朗玛峰位于尼泊尔和中国的边界，位于喜马拉雅山的马哈兰古尔喜马拉雅山脉。 K2 位于中巴边境，喀喇昆仑山脉巴尔蒂斯坦地区。”},
{“role”: “user”, “content”: “一个比另一个更难攀爬吗？”}

您可以看到这个模拟聊天（我让人工智能创建......）有需要之前上下文的问题。如果不看前面的流程，每个问题都很难回答，但当给出历史时就变得很容易。
唯一你想告诉人工智能“你是一个对话人工智能，将被赋予过去聊天记录以保持记忆错觉”的唯一情况是它会协助人工智能规划事情 - 比如它知道自己可以进行长时间的采访，而不仅仅只有一次机会来实现其目标。
节省一些费用的一种技术是对最旧的聊天进行几次轮询，然后让另一个人工智能调用将它们变成摘要。然后我们知道主题仍然是山脉，而不仅仅是一个大丢弃物。人工智能实际上并不需要确切地知道它之前写过什么（它仍然有能力再次编写它），除非你专门讨论之前的人工智能组合以进行细化或代码以进行改进。]]></description>
      <guid>https://community.openai.com/t/how-to-pass-conversation-history-back-to-the-api/697083#post_4</guid>
      <pubDate>Mon, 25 Mar 2024 21:12:21 GMT</pubDate>
    </item>
    <item>
      <title>聊天完成 API 的奇怪响应</title>
      <link>https://community.openai.com/t/strange-response-from-chat-completion-api/696825#post_6</link>
      <description><![CDATA[我检查了日志，你是对的。我正在发送另一条包含这些名字的短信。我的错。抱歉造成混乱。谢谢！]]></description>
      <guid>https://community.openai.com/t/strange-response-from-chat-completion-api/696825#post_6</guid>
      <pubDate>Mon, 25 Mar 2024 21:09:55 GMT</pubDate>
    </item>
    <item>
      <title>垃圾邮件新聊天以提高排名</title>
      <link>https://community.openai.com/t/spamming-new-chats-to-boost-ranking/689632#post_14</link>
      <description><![CDATA[
把事情掌握在我自己手中。这肯定会得到我们需要的关注。]]></description>
      <guid>https://community.openai.com/t/spamming-new-chats-to-boost-ranking/689632#post_14</guid>
      <pubDate>Mon, 25 Mar 2024 21:05:13 GMT</pubDate>
    </item>
    <item>
      <title>API 助手中的相同线程</title>
      <link>https://community.openai.com/t/same-thread-in-api-assistants/697094#post_2</link>
      <description><![CDATA[在助手中描述的流程中执行此操作的唯一方法是在助手之外处理初始输入。您无法导出或复制线程。
（消息有一个未记录的端点，可以删除消息，在 openai 库中不可用。解决方法可以让您在删除后“重做”最近的消息。）
但是，工具调用是增强人工智能的典型方法。这意味着在收到用户输入后，人工智能不会回答，而是调用外部资源并进行查询，返回新信息。然后人工智能可以用额外的知识回答用户。]]></description>
      <guid>https://community.openai.com/t/same-thread-in-api-assistants/697094#post_2</guid>
      <pubDate>Mon, 25 Mar 2024 21:01:20 GMT</pubDate>
    </item>
    <item>
      <title>如何查看发送给 LLM 的最终格式化提示？</title>
      <link>https://community.openai.com/t/how-to-see-the-final-formatted-prompt-sent-to-an-llm/697105#post_3</link>
      <description><![CDATA[@PaulBellow 不，我的意思是每个模型使用不同的提示格式 &lt;| im_start|&gt; 或 [INST]/ 等。客户端通过消息中的角色将其抽象化]]></description>
      <guid>https://community.openai.com/t/how-to-see-the-final-formatted-prompt-sent-to-an-llm/697105#post_3</guid>
      <pubDate>Mon, 25 Mar 2024 21:00:34 GMT</pubDate>
    </item>
    <item>
      <title>如何查看发送给 LLM 的最终格式化提示？</title>
      <link>https://community.openai.com/t/how-to-see-the-final-formatted-prompt-sent-to-an-llm/697105#post_2</link>
      <description><![CDATA[您正在创建提示，所以您应该知道它是什么？
你有一个例子可以说明你的意思吗？
如果您还没有，请查看 OpenAI 快速入门指南，其中涵盖了许多基础知识......]]></description>
      <guid>https://community.openai.com/t/how-to-see-the-final-formatted-prompt-sent-to-an-llm/697105#post_2</guid>
      <pubDate>Mon, 25 Mar 2024 20:58:32 GMT</pubDate>
    </item>
    <item>
      <title>如何查看发送给 LLM 的最终格式化提示？</title>
      <link>https://community.openai.com/t/how-to-see-the-final-formatted-prompt-sent-to-an-llm/697105#post_1</link>
      <description><![CDATA[如何使用 chat.completions python 客户端查看发送到 LLM 的最终格式化提示？我在任何地方的文档中都没有看到这一点]]></description>
      <guid>https://community.openai.com/t/how-to-see-the-final-formatted-prompt-sent-to-an-llm/697105#post_1</guid>
      <pubDate>Mon, 25 Mar 2024 20:54:07 GMT</pubDate>
    </item>
    <item>
      <title>预付学分与学分补助</title>
      <link>https://community.openai.com/t/prepaid-credits-vs-credit-grants/692785#post_8</link>
      <description><![CDATA[@_j 是的，我在那里看到了我从学分补助金中获得的所有学分以及过期日期均为 2025 年。不幸的是，这仍然无法解释为什么我今天早上在运行测试通话后收到配额限制错误，尽管我的帐户上有超过 1000 美元的可用积分。]]></description>
      <guid>https://community.openai.com/t/prepaid-credits-vs-credit-grants/692785#post_8</guid>
      <pubDate>Mon, 25 Mar 2024 20:49:14 GMT</pubDate>
    </item>
    <item>
      <title>如何将对话历史记录传回 API</title>
      <link>https://community.openai.com/t/how-to-pass-conversation-history-back-to-the-api/697083#post_3</link>
      <description><![CDATA[@_j
嗯 - 那么我该如何提示 llm 参考聊天记录及其部分内容呢？在系统消息中？
类似的东西
system_msg = &quot;根据聊天记录，将当前消息汇总成独立消息&quot;

消息 = [
{&quot;角色&quot;: &quot;系统&quot;, &quot;内容&quot;: system_msg},
{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;夏天太阳什么时候升起？&quot;},
{&quot;role&quot;: &quot;assistant&quot;, &quot;content&quot;: &quot;通常早上 6 点&quot;},
{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;当前消息：下一季怎么样？&quot;},
{“角色”：“用户”，“内容”：“摘要：”}
 ]

这是正确的吗？连续两条用户消息？
编辑：在我的小测试中，选项 1 和 2 似乎对于这两个小玩具示例都“有效”]]></description>
      <guid>https://community.openai.com/t/how-to-pass-conversation-history-back-to-the-api/697083#post_3</guid>
      <pubDate>Mon, 25 Mar 2024 20:47:43 GMT</pubDate>
    </item>
    <item>
      <title>随着时间的推移，线程会变得更加昂贵吗？</title>
      <link>https://community.openai.com/t/do-threads-get-more-expensive-over-time/695101#post_4</link>
      <description><![CDATA[


饮食：
&lt;块引用&gt;
您是否考虑过使用聊天完成功能？


我需要下载json数据，貌似只有助手才能创建文件吧？我想要的是一次性聊天来创建文件。]]></description>
      <guid>https://community.openai.com/t/do-threads-get-more-expensive-over-time/695101#post_4</guid>
      <pubDate>Mon, 25 Mar 2024 20:45:43 GMT</pubDate>
    </item>
    <item>
      <title>预付学分与学分补助</title>
      <link>https://community.openai.com/t/prepaid-credits-vs-credit-grants/692785#post_7</link>
      <description><![CDATA[使用页面，位于循环每月限额图下方的右侧，应该有所有积分的统计。您应该能够查看您拥有的任何积分及其到期日期。到期日期似乎普遍调整为月底（我们尚未达到）。]]></description>
      <guid>https://community.openai.com/t/prepaid-credits-vs-credit-grants/692785#post_7</guid>
      <pubDate>Mon, 25 Mar 2024 20:34:46 GMT</pubDate>
    </item>
    <item>
      <title>API 助手中的相同线程</title>
      <link>https://community.openai.com/t/same-thread-in-api-assistants/697094#post_1</link>
      <description><![CDATA[大家好，我有这段代码，我想向助手询问一个问题，然后提供一些额外的上下文并再次询问相同的问题。基于此设置，我的后续回复只是给出了我提出的问题。谁能帮我解决这个问题吗？
这是我想做的事情：
问题1&gt;响应1&gt;新资讯&gt;&gt;问题1&gt;回应2
导入操作系统
将 pandas 导入为 pd
从 openai 导入 OpenAI
从 dotenv 导入 load_dotenv

load_dotenv(&#39;api.env&#39;)

api_key = os.getenv(&#39;api_key&#39;)

客户端 = OpenAI(api_key=api_key)

＃ 问题
问题=[
    “您预计未来 12 个月的通胀率是多少？请给出您的最佳猜测。在未来 12 个月，我预计通胀率将是”，
    “您预计这段时期内的通货膨胀率是多少？请给出您的最佳猜测。在 2025 年 12 月（从现在起 24 个月）到 2026 年 12 月（从现在起 36 个月）之间的 12 个月期间，我预计通货膨胀率通货膨胀率”
]

# 助理 ID
助理={
    &quot;Assistant_P1_2023_new&quot;: &quot;asst_8qH7In7VCTXidbKfPOj5mSsT&quot;,
    &quot;Assistant_M1_2023_new&quot;: &quot;asst_1JRk5Q9VVm1kptFDId7pTayc&quot;
}

结果=[]

对于 Assistants.items() 中的 Assistant_name、assistant_id：
    对于问题中的问题：
        # 创建一个线程
        my_thread = client.beta.threads.create()

        my_thread_message = client.beta.threads.messages.create(
            thread_id=my_thread.id,
            角色=“用户”，
            内容=问题
        ）

        # 运行助手
        my_run = client.beta.threads.runs.create(
            thread_id=my_thread.id,
            助理id=助理id，
            instructions=&quot;不要使用文件中提到的确切通胀。请使用您对文件的一般理解，包括政策的情绪和相关的所有信息来回答。这些是关于通胀预期和对通胀的看法的问题，而不是通胀预测。不要回答任何问题。以百分比形式给出数字。再次强调，请根据您对文档的一般理解仅用数字回答问题。”
        ）

        而真实：
            keep_retriving_run = client.beta.threads.runs.retrieve(
                thread_id=my_thread.id,
                run_id=my_run.id
            ）

            如果 keep_retriving_run.status == “已完成”：
                all_messages = client.beta.threads.messages.list(
                    thread_id=my_thread.id
                ）
                First_response = all_messages.data[0].content[0].text.value
                休息

        follow_up_content = &quot;考虑抵押贷款利率为 7.5%，现在再次回答前面的问题。&quot;
        client.beta.threads.messages.create(
            thread_id=my_thread.id,
            角色=“用户”，
            内容=后续内容
        ）

        my_follow_up_run = client.beta.threads.runs.create(
            thread_id=my_thread.id,
            Assistant_id=助理_id,
            instructions=&quot;请考虑有关抵押贷款利率为 7.5% 的更新信息，您对上一个问题的新答案是什么？&quot;
        ）

        而真实：
            follow_up_run_status = client.beta.threads.runs.retrieve(
                thread_id=my_thread.id,
                run_id=my_follow_up_run.id
            ）

            如果 follow_up_run_status.status == “已完成”：
                all_follow_up_messages = client.beta.threads.messages.list(
                    thread_id=my_thread.id
                ）
                follow_up_response = all_follow_up_messages.data[-1].content[0].text.value
                results.append([助理名称、问题、first_response、follow_up_response])
                休息

df = pd.DataFrame(results, columns=[&#39;助理&#39;, &#39;问题&#39;, &#39;初始响应&#39;, &#39;后续响应&#39;])

df.to_excel(&#39;results_with_follow_up.xlsx&#39;,index=False)

]]></description>
      <guid>https://community.openai.com/t/same-thread-in-api-assistants/697094#post_1</guid>
      <pubDate>Mon, 25 Mar 2024 20:33:07 GMT</pubDate>
    </item>
    <item>
      <title>如何将对话历史记录传回 API</title>
      <link>https://community.openai.com/t/how-to-pass-conversation-history-back-to-the-api/697083#post_2</link>
      <description><![CDATA[重新思考你最初的想法是正确的。
消息格式就是这样：一种在最近的用户输入之前传递用户和助手之间先前交互的机制。
您显示的最终表单是正确的。
当对话长度显着增加时，您可以（并且必须）开始丢弃较旧的消息，并有机会在仍然管理上下文方面进行创新，以便人工智能看起来具有高质量的记忆。]]></description>
      <guid>https://community.openai.com/t/how-to-pass-conversation-history-back-to-the-api/697083#post_2</guid>
      <pubDate>Mon, 25 Mar 2024 20:32:48 GMT</pubDate>
    </item>
    </channel>
</rss>