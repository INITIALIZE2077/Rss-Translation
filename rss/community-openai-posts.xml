<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Sun, 03 Mar 2024 03:18:09 GMT</lastBuildDate>
    <item>
      <title>OAI API 切换至预付费计费</title>
      <link>https://community.openai.com/t/oai-api-switching-to-pre-paid-billing/659398#post_19</link>
      <description><![CDATA[购买的积分将在一年后过期。它们不可退款。]]></description>
      <guid>https://community.openai.com/t/oai-api-switching-to-pre-paid-billing/659398#post_19</guid>
      <pubDate>Sun, 03 Mar 2024 03:17:39 GMT</pubDate>
    </item>
    <item>
      <title>Dall-E 以任何理由拒绝生成任何类型的图像</title>
      <link>https://community.openai.com/t/dall-e-refusing-to-generate-images-of-any-kind-for-any-reason/654231#post_19</link>
      <description><![CDATA[UPD：我开始使用 GPT 市场上的 DALL-E，它的效果非常好！到目前为止没有问题，但尝试在“常规”GPT 聊天会话之一中使用 DALL-E 时却不断出现同样的错误。在我看来，ChatGPT 在使用 DALL-E 插件时遇到了问题]]></description>
      <guid>https://community.openai.com/t/dall-e-refusing-to-generate-images-of-any-kind-for-any-reason/654231#post_19</guid>
      <pubDate>Sun, 03 Mar 2024 03:12:10 GMT</pubDate>
    </item>
    <item>
      <title>将 python 脚本编译为导入 OpenAI API 的 pyinstaller.exe</title>
      <link>https://community.openai.com/t/compiling-python-script-into-a-pyinstaller-exe-with-openai-api-imported/663460#post_1</link>
      <description><![CDATA[0
我正在尝试编译一个 python 脚本，使用 pyinstaller 将 OpenAI API 导入到单个 .exe 文件中。该脚本编译为 .exe 文件，但 .exe 文件不会启动。我怎样才能让这个脚本工作？
这是我用来将脚本编译成 .exe 文件的命令
pyinstaller -F --onefile --windowed “C:\Users\User\OneDrive\Desktop\chatgptbot.pyw”
从 tkinter 导入 *
从 tkinter 导入消息框
从 tkinter.scrolledtext 导入 ScrolledText
导入openai
从 openai 导入 OpenAI



客户端 = OpenAI(
   
    api_key=&quot;********************************************”,
）

def chat_gpt（提示）：
    响应 = client.chat.completions.create(
        型号=“gpt-4”，
        messages=[{&quot;角色&quot;:&quot;用户&quot;,&quot;内容&quot;:提示}]
    ）
    返回response.choices[0].message.content.strip()



def 加载屏幕():
    def 分析():
       

        chatgptentryget=chatgptentry.get(&#39;1.0&#39;, &#39;end-1c&#39;)
        chatbot_response=chat_gpt(&quot;回答这个问题：&quot; + chatgptentryget)
        messagebox.showinfo(&#39;您的回复&#39;, chatbot_response)
        
    
    分析（）



根1 = Tk()
root1.title(&quot;ChatGPT 机器人&quot;)
root1.geometry(&quot;800x310&quot;)
root1.configure(背景=&#39;#eeeeee&#39;)

滚动条 = 滚动条(root1, orient=VERTICAL)
滚动条.pack（侧=右，填充= Y）

canvas1=画布(root1,宽度=1800,高度=150,scrollregion=(0,0,1800,300))
canvas1.configure(背景=&#39;#eeeeee&#39;)

滚动条.config(命令=canvas1.yview)
canvas1.config（宽度=1800，高度=150，yscrollcommand=scrollbar.set）

canvas1.xview_moveto(0)
canvas1.yview_moveto(0)

内部 = 框架(canvas1, bg=&#39;#eeeeee&#39;)
canvas1.pack_propagate(0)
Interior_id = canvas1.create_window(400, 150, 窗口=内部, 锚点=中心)
canvas1.config（宽度=800，高度=300，bg=&#39;#eeeeee&#39;）

canvas1.pack()

def _on_mousewheel（事件）：
    事件编号=-1*(事件.delta/120)
    int(事件号)
    canvas1.yview(&quot;滚动&quot;,int(事件编号),&quot;单位&quot;)
    
canvas1.bind_all(&quot;&quot;,_on_mousewheel)



botlabel = 标签（内部，文本=“ChatGPT Bot”，宽度= 700，fg=&#39;#2b89c4&#39;，字体=（&#39;arial&#39;，17））
botlabel.pack()

label111=标签(内部,bg=&#39;#eeeeee&#39;, )
label111.pack()

Includecriteria = Label(interior, text=&quot;输入您的问题&quot;, width=700,bg =&#39;#2b89c4&#39;, fg=&#39;white&#39;, font = (&#39;arial&#39;, 12))
包含标准.pack()

rowframe01 = 框架（内部）
rowframe01.pack()
rowframe01.config(bg=&#39;#eeeeee&#39;)


chatgptentry = ScrolledText(rowframe01,宽度= 56,高度= 10, 字体=(&#39;arial&#39;,8))
chatgptentry.grid（列= 0）
processbutton=按钮（内部，text=“过程响应”，宽度=30，bd=4，fg=&#39;黑色&#39;，bg=&#39;银色&#39;，font=（&#39;arial&#39;，11），command=loadingscreen）
处理按钮.pack()
]]></description>
      <guid>https://community.openai.com/t/compiling-python-script-into-a-pyinstaller-exe-with-openai-api-imported/663460#post_1</guid>
      <pubDate>Sun, 03 Mar 2024 03:03:06 GMT</pubDate>
    </item>
    <item>
      <title>我犯了一个错误，就是在屋顶上向那些不这样做的人大喊大叫</title>
      <link>https://community.openai.com/t/i-have-made-the-mistake-of-shouting-from-the-roof-tops-to-people-who-just-do-not/663459#post_1</link>
      <description><![CDATA[大家好，
我很高兴找到这个地方。
我犯了一个错误，那就是在屋顶上向那些不明白对于那些选择抓住机会的人来说这个世界已经发生了多么根本的变化的人们大喊大叫。说实话，我可能在这个过程中失去了朋友。
无论如何，我很想交朋友，交往；商业或其他。我在技术层面上很得心应手。我最近创办了一家人工智能初创公司

  &lt;标题类=“来源”&gt;
      
projectdavid.co.uk


  &lt;文章类=“onebox-body”&gt;
    

大卫项目
使用create-react-app创建的网站





这是我一周大部分时间都在做的事情，我感到很幸运。
我们正在对“Q”进行最后的修饰，“Q”是我们针对商业和高级用户的实体。也考虑给他贴上白色标签。
我决定全力使用 Assistants API。它有点慢，我读过一些抱怨。然而，该架构的潜力已经超出了我们最疯狂的梦想。非常高兴将我们的产品构建为并行测试版，直到 @OpenAI 提高速度、流媒体、错误率等。
&lt; /p&gt;
这是迄今为止 Q 的一个小屏幕截图。
欢迎随时与我们联系。]]></description>
      <guid>https://community.openai.com/t/i-have-made-the-mistake-of-shouting-from-the-roof-tops-to-people-who-just-do-not/663459#post_1</guid>
      <pubDate>Sun, 03 Mar 2024 03:02:47 GMT</pubDate>
    </item>
    <item>
      <title>OAI API 切换至预付费计费</title>
      <link>https://community.openai.com/t/oai-api-switching-to-pre-paid-billing/659398#post_18</link>
      <description><![CDATA[祝你有美好的一天。
请问预购的积分是否也会每月过期，或者在完全用完之前可以使用？这是因为我们每个月的使用量并不是固定的，这取决于通过我们的系统发送的 API 请求的数量。如果没有过期，我们计划购买全年的预计积分。
非常感谢！]]></description>
      <guid>https://community.openai.com/t/oai-api-switching-to-pre-paid-billing/659398#post_18</guid>
      <pubDate>Sun, 03 Mar 2024 02:58:13 GMT</pubDate>
    </item>
    <item>
      <title>在 Python 中与自定义 gpt 交互</title>
      <link>https://community.openai.com/t/interacting-with-your-custom-gpt-in-python/662831#post_5</link>
      <description><![CDATA[目前，自己定义助手是更好的解决方案。自动化交互仍然有点困难]]></description>
      <guid>https://community.openai.com/t/interacting-with-your-custom-gpt-in-python/662831#post_5</guid>
      <pubDate>Sun, 03 Mar 2024 02:52:04 GMT</pubDate>
    </item>
    <item>
      <title>请求：可以指定历史上限</title>
      <link>https://community.openai.com/t/request-make-it-possible-to-specify-the-upper-limit-of-history/663420#post_3</link>
      <description><![CDATA[即使指定 limit=1，响应历史记录的数量也会继续增加。 .
def _get_message(gpt_thread_id:str, Secret:str):
客户端 = OpenAI(api_key=secret)
返回 client.beta.threads.messages.list(
thread_id=gpt_thread_id,
限制=1
）]]></description>
      <guid>https://community.openai.com/t/request-make-it-possible-to-specify-the-upper-limit-of-history/663420#post_3</guid>
      <pubDate>Sun, 03 Mar 2024 02:42:49 GMT</pubDate>
    </item>
    <item>
      <title>OAI API 切换至预付费计费</title>
      <link>https://community.openai.com/t/oai-api-switching-to-pre-paid-billing/659398#post_17</link>
      <description><![CDATA[我每月的账单不到 0.5 美元，所以如果过期我可能会赔钱。
我希望降低最低金额。]]></description>
      <guid>https://community.openai.com/t/oai-api-switching-to-pre-paid-billing/659398#post_17</guid>
      <pubDate>Sun, 03 Mar 2024 02:42:06 GMT</pubDate>
    </item>
    <item>
      <title>请求：可以指定历史上限</title>
      <link>https://community.openai.com/t/request-make-it-possible-to-specify-the-upper-limit-of-history/663420#post_2</link>
      <description><![CDATA[也许可以用limit参数来控制？
定义列表(
自我，
thread_id: str,
*，
之后：str |未给出 = NOT_GIVEN，
之前：str |未给出 = NOT_GIVEN，
限制：整数 |未给出 = NOT_GIVEN，
顺序：文字[“asc”，“desc”] |未给出 = NOT_GIVEN，
# 如果您需要将无法通过 kwargs 提供的其他参数传递给 API，请使用以下参数。
# 此处给出的额外值优先于客户端定义的值或传递给此方法的值。
extra_headers：标题|无=无，
extra_query：查询|无=无，
extra_body：身体|无=无，
超时：浮动| httpx.超时|无 |未给出 = NOT_GIVEN，
) → SyncCursorPage[ThreadMessage]:
limit：返回对象数量的限制。限制范围为 1 到 100，默认值为 20。]]></description>
      <guid>https://community.openai.com/t/request-make-it-possible-to-specify-the-upper-limit-of-history/663420#post_2</guid>
      <pubDate>Sun, 03 Mar 2024 02:34:03 GMT</pubDate>
    </item>
    <item>
      <title>使用 load_summarize_chain 时出现 UnicodeEncodeError</title>
      <link>https://community.openai.com/t/unicodeencodeerror-while-using-load-summarize-chain/634708#post_3</link>
      <description><![CDATA[是的，这与库和 API 积分有关。
Langchain 版本问题已解决：
从 langchain_openai 导入 ChatOpenAI
从 langchain.prompts 导入 PromptTemplate
API 积分问题始终得到解决（笑）。
谢谢。]]></description>
      <guid>https://community.openai.com/t/unicodeencodeerror-while-using-load-summarize-chain/634708#post_3</guid>
      <pubDate>Sun, 03 Mar 2024 02:20:03 GMT</pubDate>
    </item>
    <item>
      <title>通过 API 编辑我的 GPT 以更新知识库文件</title>
      <link>https://community.openai.com/t/edit-my-gpt-via-api-to-update-knowledge-base-files/663307#post_8</link>
      <description><![CDATA[


 krusaderjake：
&lt;块引用&gt;
我更愿意使用 API


然后制作一个 
听起来你在这方面已经领先了，只是需要在以下方面做更多的工作：



 krusaderjake：
&lt;块引用&gt;
不起作用，因为 OpenAI 具有响应大小限制，甚至无法从宽数据库表返回 100 行


也许是时候稍微过滤一下响应数据了 ]]></description>
      <guid>https://community.openai.com/t/edit-my-gpt-via-api-to-update-knowledge-base-files/663307#post_8</guid>
      <pubDate>Sun, 03 Mar 2024 02:19:54 GMT</pubDate>
    </item>
    </channel>
</rss>