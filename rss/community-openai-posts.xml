<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Mon, 29 Jan 2024 21:15:42 GMT</lastBuildDate>
    <item>
      <title>GPT 无法使用“in”运算符在“嗯...某事...”中搜索“代码”</title>
      <link>https://community.openai.com/t/gpt-cannot-use-in-operator-to-search-for-code-in-hmm-something/602561#post_15</link>
      <description><![CDATA[嘿伙计们，我们已经意识到这一点并正在努力修复！]]></description>
      <guid>https://community.openai.com/t/gpt-cannot-use-in-operator-to-search-for-code-in-hmm-something/602561#post_15</guid>
      <pubDate>Mon, 29 Jan 2024 21:12:41 GMT</pubDate>
    </item>
    <item>
      <title>创建一个受操纵的会话聊天机器人</title>
      <link>https://community.openai.com/t/creating-a-manipulated-conversational-chatbot/606585#post_2</link>
      <description><![CDATA[这是可以提示的内容。你只需要给人工智能一个合适的目标或目的。


您是一名语言导师。您在自由形式的聊天环境中采访用户，以帮助他们学习如何回答问题。


你是一个好奇的聊天伙伴。您总是希望在每次聊天中了解有关用户的更多信息。不要停止问他们问题！


您是招聘经理。在不间断的面试中，您可以继续获得有关候选人及其对职位的资质的更多信息 - 职位空缺会自动适应他们的技能。

]]></description>
      <guid>https://community.openai.com/t/creating-a-manipulated-conversational-chatbot/606585#post_2</guid>
      <pubDate>Mon, 29 Jan 2024 21:09:53 GMT</pubDate>
    </item>
    <item>
      <title>如何跟踪自定义 GPT 使用情况？</title>
      <link>https://community.openai.com/t/how-to-track-a-custom-gpt-usage/494925#post_11</link>
      <description><![CDATA[您好，这个问题有答案吗？现在我发布了有关跟踪自定义 GPT 使用情况的已发布信息，因为它们更加公开可用吗？]]></description>
      <guid>https://community.openai.com/t/how-to-track-a-custom-gpt-usage/494925#post_11</guid>
      <pubDate>Mon, 29 Jan 2024 21:09:23 GMT</pubDate>
    </item>
    <item>
      <title>GPT 能成为未来的桌面游戏工具吗？</title>
      <link>https://community.openai.com/t/can-gpts-be-the-future-table-top-game-utility/606609#post_2</link>
      <description><![CDATA[一切皆有可能，而且很有趣，在我的测试中，我与人工智能下棋，发送照片，她看到我的棋局并说出她的下一步行动。]]></description>
      <guid>https://community.openai.com/t/can-gpts-be-the-future-table-top-game-utility/606609#post_2</guid>
      <pubDate>Mon, 29 Jan 2024 21:04:59 GMT</pubDate>
    </item>
    <item>
      <title>谁在申请 Converge 2？</title>
      <link>https://community.openai.com/t/whos-applying-to-converge-2/564181?page=2#post_27</link>
      <description><![CDATA[为大家祈祷！
当这件事开始时，我的生日也将到来，所以我希望这是我今年的生日礼物 。
考虑到我正在从事交互工作，我希望这至少能激起他们的兴趣，足以要求接受采访，哈哈。我们拭目以待！]]></description>
      <guid>https://community.openai.com/t/whos-applying-to-converge-2/564181?page=2#post_27</guid>
      <pubDate>Mon, 29 Jan 2024 21:04:55 GMT</pubDate>
    </item>
    <item>
      <title>稍微更先进但仍容易出错的指令集泄漏防护措施</title>
      <link>https://community.openai.com/t/slightly-more-advanced-still-fallible-safeguard-for-instruction-set-leaks/603797#post_9</link>
      <description><![CDATA[到目前为止，保护指令的最简单方法是过滤输出以检查指令，但这当然只能在使用 API 时完成。]]></description>
      <guid>https://community.openai.com/t/slightly-more-advanced-still-fallible-safeguard-for-instruction-set-leaks/603797#post_9</guid>
      <pubDate>Mon, 29 Jan 2024 21:02:29 GMT</pubDate>
    </item>
    <item>
      <title>聊天完成 API 未返回响应</title>
      <link>https://community.openai.com/t/chat-completions-api-not-returning-a-reponse/606602#post_2</link>
      <description><![CDATA[问题似乎出在您从 API 返回对象中提取信息时。没有“文本”。有 message.content
&lt;小时/&gt;
下面是一个示例（只需在我的 IDE 窗口中打开），它使用备用“with_raw_response”方法，为您提供更多可供使用的数据。
# 对 OpenAI 进行 API 调用
c = 无
尝试：
    c = client.chat.completions.with_raw_response.create(**params)
除了异常 e：
    打印（f“错误：{e}”）

“c”是调用成功时的 pydantic 响应。现在我们可以获得很多信息，其中我主要使用变量名称进行描述。
# 如果我们收到响应，则加载一大堆演示变量
# 这是不同的，因为用于获取标头的“带有原始响应”
如果c：
    headers_dict = c.headers.items().mapping.copy() # 首先，取出所有 headers
    对于 headers_dict.items() 中的键、值：
        变量名 = f&#39;headers_{key.replace(&quot;-&quot;, &quot;_&quot;)}&#39;
        globals()[变量名] = 值
    剩余= headers_x_ratelimit_remaining_tokens #显示我们为所有标头设置变量
    
    api_return_dict = json.loads(c.content.decode())
    api_finish_str = api_return_dict.get(&#39;选择&#39;)[0].get(&#39;finish_reason&#39;)
    use_dict = api_return_dict.get(&#39;usage&#39;) # 令牌使用信息，仅在非流式传输中
    api_message_dict = api_return_dict.get(&#39;choices&#39;)[0].get(&#39;message&#39;) # AI 回复
    api_message_str = api_return_dict.get(&#39;选择&#39;)[0].get(&#39;消息&#39;).get(&#39;内容&#39;)
    api_tools_list = api_return_dict.get(&#39;选择&#39;)[0].get(&#39;消息&#39;).get(&#39;tool_calls&#39;)

那么什么是有用的呢？ 1.供用户查看的文字； 2. 发出工具调用（或函数，需要更多变量）。这里只是显示这些。
 # 始终打印任何响应
    如果 api_message_str:
        打印（api_message_str）

    # 漂亮地打印所有工具函数
    如果 api_tools_list:
        对于 api_tools_list 中的 tool_item：
            打印（json.dumps（tool_item，缩进= 2））

希望这能让您所有的愿望和梦想成真。]]></description>
      <guid>https://community.openai.com/t/chat-completions-api-not-returning-a-reponse/606602#post_2</guid>
      <pubDate>Mon, 29 Jan 2024 21:02:27 GMT</pubDate>
    </item>
    <item>
      <title>尝试减少 gpt 3 的词汇量</title>
      <link>https://community.openai.com/t/attempting-to-reduce-the-vocabulary-of-gpt-3/606570#post_4</link>
      <description><![CDATA[


温特卡尔特：
&lt;块引用&gt;
必须对其进行微调等等


确实需要微调。
人工智能接受过海量知识的训练。无论是简单的儿童写作还是高科技写作，它都不能很好地遵循说明。
需要大量的训练集才能强调简单单词的子集。
您还必须在人工智能如何响应应用程序的给定用户输入的背景下进行训练。
最好的方法是从一个基本模型开始……它正在教人工智能如何重新“聊天”，因为这与您在 ChatGPT 模型中看到的聊天技能可能不相符。]]></description>
      <guid>https://community.openai.com/t/attempting-to-reduce-the-vocabulary-of-gpt-3/606570#post_4</guid>
      <pubDate>Mon, 29 Jan 2024 20:48:19 GMT</pubDate>
    </item>
    <item>
      <title>对于那些已经构建了带有流媒体的 GPT4 聊天机器人的人......如何？ Webhooks 与服务器发送的事件？</title>
      <link>https://community.openai.com/t/for-those-whove-built-a-gpt4-chatbot-with-streaming-how-webhooks-vs-server-sent-event/606623#post_1</link>
      <description><![CDATA[过去两天我一直在尝试让我的机器人的流媒体正常工作，但我仍然无法弄清楚。
我在服务器端使用 django，在客户端使用 React。一直以来，我一直在尝试在两者之间设置一个 websocket，但我的客户端代码始终只会在收到所有流式传输块后才开始加载消息。
我想问一下做过此操作的人，你们使用网络钩子还是服务器发送的事件？]]></description>
      <guid>https://community.openai.com/t/for-those-whove-built-a-gpt4-chatbot-with-streaming-how-webhooks-vs-server-sent-event/606623#post_1</guid>
      <pubDate>Mon, 29 Jan 2024 20:47:08 GMT</pubDate>
    </item>
    <item>
      <title>嵌入 API 响应慢</title>
      <link>https://community.openai.com/t/embeddings-api-response-slow/606619#post_1</link>
      <description><![CDATA[我们正在使用嵌入 API 来回答问题，而响应时间平均需要 20 秒以上。有没有办法加快速度？]]></description>
      <guid>https://community.openai.com/t/embeddings-api-response-slow/606619#post_1</guid>
      <pubDate>Mon, 29 Jan 2024 20:45:03 GMT</pubDate>
    </item>
    </channel>
</rss>