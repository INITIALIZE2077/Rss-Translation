<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Mon, 18 Dec 2023 09:18:26 GMT</lastBuildDate>
    <item>
      <title>无法训练自定义 GPT，在训练 GPT 时显示“错误交谈”</title>
      <link>https://community.openai.com/t/not-able-to-train-custom-gpts-showing-error-talking-to-when-training-gpts/563054#post_1</link>
      <description><![CDATA[当我向自定义 GPT 提供新指令时，它会连续显示此错误
 ]]></description>
      <guid>https://community.openai.com/t/not-able-to-train-custom-gpts-showing-error-talking-to-when-training-gpts/563054#post_1</guid>
      <pubDate>Mon, 18 Dec 2023 09:07:50 GMT</pubDate>
    </item>
    <item>
      <title>为具有架构验证的自定义脚本语言开发对话式人工智能系统</title>
      <link>https://community.openai.com/t/developing-a-conversational-ai-system-for-a-custom-scripting-language-with-schema-validation/563052#post_1</link>
      <description><![CDATA[开发者您好，
简介
&lt;块引用&gt;
我目前正在从事对话式人工智能的开发，其中的挑战在于将用户语言翻译成自定义脚本语言。此过程涉及根据预定义的模式列表访问变量。向社区寻求关于这一努力的有效方法的见解和建议。

示例
架构
[
  {
    “名称”：“用户”，
    “架构”：{
      “姓名”： {
        “类型”：“字符串”
      },
      “年龄”： {
        “类型”：“数量”
      },
      “被批准”： {
        “类型”：“布尔值”
      },
      “信用”： {
        “类型”：“数量”
      }
    }
  },
  {
    “姓名”：“机票”，
    “架构”：{
      “电影”： {
        “类型”：“字符串”
      },
      “票号”： {
        “类型”：“数量”
      },
      “是成人”：{
        “类型”：“布尔值”
      },
      “信用”： {
        “类型”：“数量”
      }
    }
  }
]


用户输入
成人电影时，如果用户年龄未满 18 岁，则不批准该用户

模型输出
if (user.age &lt; 18 and movie.isAdult == true)
然后 (user.isApproved = true)
否则（用户.isApproved = false）

&lt;块引用&gt;
注释：
在给定的示例中，用户输入和模型输出反映了期望的结果。值得注意的是，我在用户输入中省略了对“user.age”和“ticket.isAdult”的引用，但输出根据我们的自定义脚本与指定模式无缝合并了这些变量。我已经通过微调成功实现了自定义脚本，但没有架构验证，需要在用户输入中直接包含“user.age”

问题：如何使用 OpenAI API 实现此场景？寻求社区的见解和建议！]]></description>
      <guid>https://community.openai.com/t/developing-a-conversational-ai-system-for-a-custom-scripting-language-with-schema-validation/563052#post_1</guid>
      <pubDate>Mon, 18 Dec 2023 09:06:40 GMT</pubDate>
    </item>
    </channel>
</rss>