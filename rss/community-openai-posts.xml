<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Tue, 06 Feb 2024 09:19:06 GMT</lastBuildDate>
    <item>
      <title>将 RAG 聊天机器人系统扩展到数百万个文档</title>
      <link>https://community.openai.com/t/scaling-rag-chatbot-system-to-millions-of-documents/615386#post_13</link>
      <description><![CDATA[+1 表示 SuperDuperDB。
因为您可以非常快速地创建良好的管道]]></description>
      <guid>https://community.openai.com/t/scaling-rag-chatbot-system-to-millions-of-documents/615386#post_13</guid>
      <pubDate>Tue, 06 Feb 2024 09:18:11 GMT</pubDate>
    </item>
    <item>
      <title>GPT 操作、不记名令牌授权</title>
      <link>https://community.openai.com/t/gpt-actions-bearer-token-authorization/511475#post_8</link>
      <description><![CDATA[如果它是面向非技术用户群的个性化 GPT，他们会很高兴它有效，甚至不知道如何滥用它。]]></description>
      <guid>https://community.openai.com/t/gpt-actions-bearer-token-authorization/511475#post_8</guid>
      <pubDate>Tue, 06 Feb 2024 09:16:27 GMT</pubDate>
    </item>
    <item>
      <title>GPT 操作、不记名令牌授权</title>
      <link>https://community.openai.com/t/gpt-actions-bearer-token-authorization/511475#post_7</link>
      <description><![CDATA[我明白您的想法，因为有时通过自定义操作调用 API 确实是一个难题。



 SmartGPT解决方案：
&lt;块引用&gt;
公开无密钥端点


这意味着任何今天可以访问 GPT 但明天可能无法访问的人仍然可以使用公开公开的功能，无需进行身份验证。
添加 OAuth 以确保只有具有相应权限的用户才能使用 API 是否有意义？归根结底，保护个人对互联服务的访问是当务之急，以免被禁止或承担巨额费用。]]></description>
      <guid>https://community.openai.com/t/gpt-actions-bearer-token-authorization/511475#post_7</guid>
      <pubDate>Tue, 06 Feb 2024 09:13:49 GMT</pubDate>
    </item>
    <item>
      <title>与 RAG 一起使用的最佳矢量数据库</title>
      <link>https://community.openai.com/t/best-vector-database-to-use-with-rag/615350#post_11</link>
      <description><![CDATA[你尝试过SuperDuperDB吗？它可以做到这一点，甚至更多]]></description>
      <guid>https://community.openai.com/t/best-vector-database-to-use-with-rag/615350#post_11</guid>
      <pubDate>Tue, 06 Feb 2024 09:12:17 GMT</pubDate>
    </item>
    <item>
      <title>尽管有可用积分和 RPM 仍遇到 RateLimitError</title>
      <link>https://community.openai.com/t/encountering-ratelimiterror-despite-having-available-credits-and-rpm/616122#post_1</link>
      <description><![CDATA[各位开发人员大家好，
我最近在 OpenAI 的 API 中遇到了 RateLimitError，我正在向可能经历过类似情况的人寻求一些指导或见解。错误信息如下：
openai.RateLimitError: 错误代码: 429 - {&#39;error&#39;: {&#39;message&#39;: &#39;您超出了当前配额，请检查您的计划和账单详细信息。有关此错误的更多信息，请阅读文档：https://platform.openai.com/docs/guides/error-codes/api-errors.&#39;, &#39;type&#39;: &#39;insufficient_quota&#39;, &#39;param&#39;: None, &#39;代码&#39;: &#39;insufficient_quota&#39;}}


根据消息，我似乎已经超出了当前的配额。然而，在检查我的 OpenAI 帐户时，我注意到我仍然有 2.85 美元的积分，并且 API 已经有几个小时没有使用了（没有处理任何请求）。这让我有点困惑。
我已经查看了错误消息链接中提供的有关错误代码和 API 限制的文档，但我还没有找到明确的解释或解决方案来解决为什么我在拥有可用积分的情况下仍达到此速率限制。&lt; /p&gt;
有人遇到过类似的问题吗？您是如何解决的？除了按照建议检查计划和账单详细信息的明显措施之外，我还应该采取哪些具体步骤来解决此错误并防止其再次发生？
感谢您就这个问题分享的任何建议、见解或经验。对于我正在进行的项目来说，了解如何有效地克服这些限制并确保不间断地访问 OpenAI 的服务至关重要。
预先感谢您的帮助！]]></description>
      <guid>https://community.openai.com/t/encountering-ratelimiterror-despite-having-available-credits-and-rpm/616122#post_1</guid>
      <pubDate>Tue, 06 Feb 2024 09:11:28 GMT</pubDate>
    </item>
    <item>
      <title>让 API 读取整个文档的最佳方法是什么？</title>
      <link>https://community.openai.com/t/best-way-to-get-the-api-to-read-the-whole-document/616036#post_6</link>
      <description><![CDATA[我会尝试一下。但是，您是否曾设法让它完整地记录整个文档并基本上为您提供从头到尾的摘要？]]></description>
      <guid>https://community.openai.com/t/best-way-to-get-the-api-to-read-the-whole-document/616036#post_6</guid>
      <pubDate>Tue, 06 Feb 2024 09:09:36 GMT</pubDate>
    </item>
    <item>
      <title>GPT 操作、不记名令牌授权</title>
      <link>https://community.openai.com/t/gpt-actions-bearer-token-authorization/511475#post_6</link>
      <description><![CDATA[您对无服务器函数创建一个公共无密钥端点，该函数使用您想要访问的端点进行身份验证。基本上你额外添加了一层。当我构建私有 GPT 时，我的公共无服务器功能端点不会受到垃圾邮件攻击。]]></description>
      <guid>https://community.openai.com/t/gpt-actions-bearer-token-authorization/511475#post_6</guid>
      <pubDate>Tue, 06 Feb 2024 09:02:19 GMT</pubDate>
    </item>
    <item>
      <title>开始聊天如何接受用户输入（例如电子邮件）</title>
      <link>https://community.openai.com/t/how-a-start-chat-with-take-user-input-like-email/615899#post_5</link>
      <description><![CDATA[从 Flask 导入 Flask、render_template、request、jsonify
从 langchain.vectorstores 导入 FAISS
从 langchain.chat_models 导入 ChatOpenAI
从 langchain.embeddings.openai 导入 OpenAIEmbeddings
从 langchain.text_splitter 导入 RecursiveCharacterTextSplitter
从 langchain.chains 导入 ConversationalRetrievalChain
导入操作系统
从 PyPDF2 导入 PdfReader
app = Flask(名称)
加载 PDF 并提取文本
pdf_file_obj = open(“docs/jat.pdf”, “rb”)
pdf_reader = PdfReader(pdf_file_obj)
num_pages = len(pdf_reader.pages)
检测到的文本=“”
对于范围内的 page_num(num_pages):
page_obj = pdf_reader.pages[page_num]
detector_text += page_obj.extract_text() + “\n\n”
pdf_file_obj.close()
设置 OpenAI API 密钥
os.environ[“OPENAI_API_KEY”] = “”
将文本拆分为文档
text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=200)
文本 = text_splitter.create_documents([Detected_text])
构建向量索引
目录=“index_store”
vector_index = FAISS.from_documents(texts, OpenAIEmbeddings())
矢量索引.save_local（目录）
加载向量索引并设置检索器
vector_index = FAISS.load_local(目录, OpenAIEmbeddings())
检索器 = vector_index.as_retriever(search_type=“相似度”, search_kwargs={“k”: 6})
创建 ConversationalRetrievalChain
conv_interface = ConversationalRetrievalChain.from_llm(ChatOpenAI(温度=0), 检索器=检索器)
存储聊天记录
chat_history =  # 我们不会使用这个
@app.route(‘/’)
def索引():
return render_template(&#39;chat.html&#39;, user_input=“”, bot_response=“”)
@app.route(&#39;/api/chat&#39;,methods=[&#39;POST&#39;])
def chat():
user_input = request.form[&#39;user_input&#39;]
# 获取机器人的响应
bot_response = conv_interface({&quot;question&quot;: user_input, &quot;chat_history&quot;: chat_history})[&quot;answer&quot;]

返回 jsonify({&quot;bot_response&quot;: bot_response})

如果名称 == ‘ma​​in’：
app.run（调试=True，端口=5001）
我需要这个代码，仅给出我的pdf知识库，仅用于给出答案]]></description>
      <guid>https://community.openai.com/t/how-a-start-chat-with-take-user-input-like-email/615899#post_5</guid>
      <pubDate>Tue, 06 Feb 2024 09:01:54 GMT</pubDate>
    </item>
    <item>
      <title>GPT 操作、不记名令牌授权</title>
      <link>https://community.openai.com/t/gpt-actions-bearer-token-authorization/511475#post_5</link>
      <description><![CDATA[您可能并未暗示将 API 密钥/令牌包含到规范中。因为这将是一个巨大的安全问题。
当前实施的最大优势是 OpenAI 存储在其端加密的 API 密钥。他们还提供有关安全和保障的经过审核的文件。
当您在通过 ChatGPT 界面构建 GPT 的上下文中提到“无服务器功能”时，您的服务是否提供相同级别的安全性？
关于原来的问题；
通常，在这些情况下，承载身份验证无法按预期工作，可以通过将方法设置为“自定义”，然后在 OpenAPI 规范中定义名称来解决。]]></description>
      <guid>https://community.openai.com/t/gpt-actions-bearer-token-authorization/511475#post_5</guid>
      <pubDate>Tue, 06 Feb 2024 08:58:27 GMT</pubDate>
    </item>
    <item>
      <title>清理附加到线程的所有文件</title>
      <link>https://community.openai.com/t/cleanup-all-the-files-attached-to-a-thread/616104#post_1</link>
      <description><![CDATA[嗨，
我正在编写一个 Jupiter 笔记本来测试 Assistant API 的功能。我创建一个助手、一个线程、一些消息，然后运行它们。最后，我想清理我创建的所有实体，包括助手、线程和文件。如果文件是助理级别的，就没有问题。我可以使用以下代码清理所有内容（包括文件）：
assistant_files = client.beta.assistants.files.list(assistant_id=assistant.id)
对于 Assistant_files 中的文件：
    client.files.delete(file_id=file.id)
client.beta.assistants.delete(assistant_id=assistant.id)
client.beta.threads.delete(thread_id=thread.id)

但是，如果该文件附加到单独的消息中或者是由助理响应生成的，我无法找到将它们全部列出并删除的方法。
我怎样才能做到这一点？
这是笔记本如果您有兴趣。]]></description>
      <guid>https://community.openai.com/t/cleanup-all-the-files-attached-to-a-thread/616104#post_1</guid>
      <pubDate>Tue, 06 Feb 2024 08:58:06 GMT</pubDate>
    </item>
    <item>
      <title>更新账单请求需要多长时间？</title>
      <link>https://community.openai.com/t/how-long-does-it-take-to-renovate-the-billing-request/616080#post_2</link>
      <description><![CDATA[OpenAI API 中存在“层”的概念。
https://platform.openai.com/account/限制
您的等级是根据您创建帐户的时间和使用量来设定的，每月最高 API 使用费根据您的等级设置上限。
如果您看到消息“您超出了当前配额，请检查您的计划和账单详细信息。有关此错误的更多信息，您可能已经超出了为您的级别设置的每月限额。
https://help.openai.com/en/articles/6891831-error-code-429-you-exceeded-your-current-配额请检查您的计划和账单详细信息
首先，请检查您当前的等级。
然后，确保您没有超出该级别的限制。
在某些情况下，可能会接受例外情况。]]></description>
      <guid>https://community.openai.com/t/how-long-does-it-take-to-renovate-the-billing-request/616080#post_2</guid>
      <pubDate>Tue, 06 Feb 2024 08:54:35 GMT</pubDate>
    </item>
    <item>
      <title>我的微调模型没有出现在 Playground 中</title>
      <link>https://community.openai.com/t/my-fine-tuned-model-does-not-appear-in-the-playground/615224#post_4</link>
      <description><![CDATA[你好，
好吧，我刚刚意识到 Playground 中可以使用微调模型，但我试图通过无法使用它们的助手来使用它们。
所以，我可以访问它了^^ 很抱歉给您带来不便。
祝你有美好的一天，谢谢！]]></description>
      <guid>https://community.openai.com/t/my-fine-tuned-model-does-not-appear-in-the-playground/615224#post_4</guid>
      <pubDate>Tue, 06 Feb 2024 08:51:30 GMT</pubDate>
    </item>
    <item>
      <title>让 API 读取整个文档的最佳方法是什么？</title>
      <link>https://community.openai.com/t/best-way-to-get-the-api-to-read-the-whole-document/616036#post_5</link>
      <description><![CDATA[此外，有时“摘要”一词本身也会影响输出的长度和质量。尝试将其替换为不同的术语/说明，例如要求模型准备详细的备忘录或类似内容。它可以提供帮助。]]></description>
      <guid>https://community.openai.com/t/best-way-to-get-the-api-to-read-the-whole-document/616036#post_5</guid>
      <pubDate>Tue, 06 Feb 2024 08:49:23 GMT</pubDate>
    </item>
    <item>
      <title>让 GPT 记住正确获取的数据</title>
      <link>https://community.openai.com/t/make-gpt-remember-fetched-data-correctly/616093#post_1</link>
      <description><![CDATA[你好，我想问一下，当 gpt 获取时，以免说 JSON 有 300 个条目，每个条目包含 5 个键。所以它是一个相当大的 JSON。我如何微调或优化自定义 GPT，使其不会忘记或产生幻觉并检索正确的信息。当我尝试要求它通过某个键聚合数据时？
感谢您的回复。]]></description>
      <guid>https://community.openai.com/t/make-gpt-remember-fetched-data-correctly/616093#post_1</guid>
      <pubDate>Tue, 06 Feb 2024 08:46:20 GMT</pubDate>
    </item>
    <item>
      <title>流式传输 Markdown 或其他格式化文本</title>
      <link>https://community.openai.com/t/streaming-markdown-or-other-formatted-text/510268#post_5</link>
      <description><![CDATA[感谢@TimJohns的详细回复！ ：&gt;]]></description>
      <guid>https://community.openai.com/t/streaming-markdown-or-other-formatted-text/510268#post_5</guid>
      <pubDate>Tue, 06 Feb 2024 08:46:15 GMT</pubDate>
    </item>
    </channel>
</rss>